export function renderScreen1(attachButtonEvents) {
  const $btn = $('<button>', { id: 'clickBtn', text: 'Haz click o toca aqu칤' });
  const $output = $('<p>', { id: 'output', text: 'Esperando interacci칩n...' });
  $('#screen-content').empty().append($btn, $output);
  attachButtonEvents($btn, $output);
}

export function renderScreen2() {
  // 1. Seleccionar y limpiar el contenedor principal
  const $screenContent = $('#screen-content');
  $screenContent.empty();

  // 2. Crear el p치rrafo de instrucciones
  const $instruccionP = $('<p>', {
      style: "font-size: 1.2em; font-weight: bold; color: #333;"
  }).text('El usuario tiene que encontrar la foto del conejo y hacer clic sobre ella. 游낺');

  // 3. Definir y crear el texto largo para forzar el scroll
  const textoBase = `
      <h2>Texto Extenso para Scroll M칩vil</h2>
      <p>
          El desarrollo "mobile-first" es crucial. Esta secci칩n de texto ha sido creada para **forzar el desplazamiento (scroll)** en tu dispositivo m칩vil. Debes deslizar hacia abajo repetidamente para encontrar el objetivo. La usabilidad t치ctil, la optimizaci칩n de recursos y la velocidad de carga son pilares de una buena aplicaci칩n web m칩vil. Sigue deslizando, el objetivo est치 mucho m치s abajo.
      </p>
      <p>
          Al usar jQuery para la manipulaci칩n del DOM, garantizamos una forma concisa de construir la interfaz. Aseg칰rate de que tu aplicaci칩n maneje bien los eventos t치ctiles y que el tama침o de los elementos interactivos sea adecuado para el dedo (al menos 48px). Continuar descendiendo... el conejo a칰n se oculta.
      </p>
      <p>
          La implementaci칩n de este ejercicio valida la capacidad de la interfaz de gestionar contenido extenso. Casi llegas al final del contenido.
      </p>
      <hr>
  `;
    
    // Repetimos el texto varias veces para garantizar un scroll significativo
  const $textoLargoDiv = $('<div>', {
      class: 'texto-largo'
  }).html(textoBase.repeat(4)); 

    // 4. Crear la imagen del conejo clickeable
  const $imagenConejo = $('<img>', {
      class: 'imagen-conejo',
      src: "https://upload.wikimedia.org/wikipedia/commons/0/07/Rabbit_in_Edinburgh_Gardens.jpg", // Usa tu propia URL de imagen
      alt: "Foto del conejo clickeable.",
      title: "춰Haz clic o toca aqu칤!"
  });

    // 5. A침adir el manejador de eventos click a la imagen
  $imagenConejo.on('click', function() {
        // L칩gica de JavaScript a ejecutar cuando el usuario encuentre el conejo
      alert('游냟 춰칄xito! Has encontrado y clickeado la foto del conejo.');
        // Aqu칤 podr칤as llamar a otra funci칩n para pasar al siguiente nivel o pantalla
        // ejemplo: renderScreen3();
  });

    // 6. A침adir todos los elementos al contenedor principal
  $screenContent
      .append($instruccionP)
      .append($('<hr>'))
      .append($textoLargoDiv)
      .append($imagenConejo);
}


function renderPantallaConejo() {
            // 1. Definir el contenedor principal donde inyectar el c칩digo
            const $container = $('#contenedor-principal');
            
            // Limpiar el contenedor si ya tiene contenido (para evitar duplicados)
            $container.empty();

            // 2. Crear el p치rrafo de instrucciones
            const $instruccionP = $('<p>', {
                style: "font-size: 1.2em; font-weight: bold; color: #333;"
            }).text('El usuario tiene que encontrar la foto del conejo y hacer clic sobre ella. 游낺');

            // 3. Crear el texto largo para forzar el scroll
            const textoExtenso = `
                <h2>Informaci칩n Extensa sobre Desarrollo M칩vil y jQuery</h2>
                <p>
                    El desarrollo de aplicaciones web m칩viles requiere la optimizaci칩n de recursos y la gesti칩n eficiente del DOM, tareas en las que **jQuery** puede asistir, aunque la tendencia actual es hacia frameworks m치s ligeros. No obstante, para manipulaciones r치pidas del DOM como esta, jQuery es eficaz. Este texto se ha generado para forzar el desplazamiento (*scroll*) en la pantalla de su dispositivo. El objetivo del conejo est치 en la parte inferior, por lo que debe deslizar la pantalla hacia abajo varias veces.
                </p>
                <p>
                    La implementaci칩n de dise침os **"mobile-first"** asegura que el sitio cargue r치pidamente en dispositivos con recursos limitados, aplicando luego mejoras para pantallas m치s grandes. Recuerde que, al usar JavaScript para inyectar HTML, debe tener cuidado con las vulnerabilidades de seguridad como los ataques XSS (Cross-Site Scripting). En este ejemplo, el contenido es est치tico, lo cual es seguro. Contin칰e su descenso, el conejo no aparece a칰n.
                </p>
                <p>
                    Para mejorar la experiencia t치ctil, aseg칰rese de que todos los elementos interactivos sean f치cilmente accesibles con el dedo. El desarrollo para m칩viles requiere pruebas rigurosas en diferentes dispositivos y condiciones de red. 춰Ya casi llega al final! Siga bajando hasta el final del contenido.
                </p>
                <hr>
            `;
            
            const $textoLargoDiv = $('<div>', {
                class: 'texto-largo'
            }).html(textoExtenso.repeat(3)); // Repetimos el texto para garantizar un scroll considerable

            // 4. Crear la imagen del conejo envuelta en un enlace (o solo como imagen con click handler)
            const $imagenConejo = $('<img>', {
                class: 'imagen-conejo',
                src: "https://upload.wikimedia.org/wikipedia/commons/0/07/Rabbit_in_Edinburgh_Gardens.jpg",
                alt: "Foto de un conejo que el usuario debe seleccionar."
            });

            // 5. A침adir el manejador de eventos (click) con jQuery a la imagen
            $imagenConejo.on('click', function() {
                alert('춰Felicidades! Encontraste y clickeaste el conejo. Aqu칤 ejecutar칤as la l칩gica de tu aplicaci칩n.');
                // Puedes a침adir aqu칤 tu l칩gica de JavaScript, por ejemplo:
                // iniciarSiguienteNivel();
            });

            // 6. A침adir todos los elementos al contenedor principal en el orden deseado
            $container
                .append($instruccionP)
                .append($('<hr>'))
                .append($textoLargoDiv)
                .append($imagenConejo);

            // Opcional: Desplazarse autom치ticamente al inicio del contenido din치mico
            $('html, body').animate({ scrollTop: 0 }, 'slow');
        }
        
        // **Llamada de ejemplo para probar la funci칩n inmediatamente al cargar la p치gina:**
        // $(document).ready(function() {
        //     renderPantallaConejo();
        // });

export function renderScreen3() {
  $('#screen-content').empty();
}
